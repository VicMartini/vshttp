name: Create Release

on:
  push:
    branches:
      - master

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up CMake
        uses: lukka/get-cmake@latest

      - name: Configure CMake
        run: cmake -B build

      - name: Build
        run: cmake --build build --config Release

      - name: Archive Linux build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vshttp-linux-binaries
          path: build/vshttp

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up CMake
        uses: lukka/get-cmake@latest

      - name: Configure CMake
        run: cmake -B build

      - name: Build
        run: cmake --build build --config Release

      - name: Archive macOS build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vshttp-macos-binaries
          path: build/vshttp

  release:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      repository-projects: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Linux build artifacts
        uses: actions/download-artifact@v4
        with:
          name: vshttp-linux-binaries
          path: build/linux

      - name: Download macOS build artifacts
        uses: actions/download-artifact@v4
        with:
          name: vshttp-macos-binaries
          path: build/macos

      - name: Extract version from CMakeLists.txt
        id: extract_version
        run: |
          VERSION=$(grep -Po '(?<=project\(vshttp VERSION )[^)]*' CMakeLists.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: "Release v${{ env.VERSION }}"
          draft: false
          prerelease: false

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/linux/vshttp
          asset_name: vshttp-linux
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/macos/vshttp
          asset_name: vshttp-macos
          asset_content_type: application/octet-stream
